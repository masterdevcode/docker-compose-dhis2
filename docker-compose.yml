version: '3'
services:
  core:
    container_name: dhis2
    image: "${DHIS2_CORE_IMAGE}"
    restart: always
    volumes:
      - ${DHIS2_CORE_CONFIG:-./config/DHIS2_home/dhis.conf}:${DHIS2_HOME:-/opt/dhis2}/dhis.conf
      - ./config/DHIS2_home/log4j2.xml:${DHIS2_HOME:-/DHIS2_home}/log4j2.xml
      - ./config/server.xml:/usr/local/tomcat/conf/server.xml
      - home:${DHIS2_HOME:-/DHIS2_home}
    environment:
      DHIS2_HOME: ${DHIS2_HOME:-/DHIS2_home}
      CATALINA_OPTS: "-Dcontext.path='${DHIS2_CORE_CONTEXT_PATH:-}' \
              -Dlog4j2.configurationFile=${DHIS2_HOME:-/DHIS2_home}/log4j2.xml"
    depends_on:
      - "db"
  db:
    container_name: db_postgres
    image: postgis/postgis:12-3.3
    command: >
      postgres -c max_connections=200
      -c shared_buffers=3200MB
      -c work_mem=24MB
      -c maintenance_work_mem=1024MB
      -c temp_buffers=16MB
      -c effective_cache_size=8000MB
      -c checkpoint_completion_target=0.8
      -c synchronous_commit=off
      -c wal_writer_delay=10000ms
      -c random_page_cost=1.1
      -c max_locks_per_transaction=100
      -c track_activity_query_size=8192
    restart: always
    volumes:
      - datadb:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: dhis2
      POSTGRES_USER: dhis
      POSTGRES_PASSWORD: dhis
  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "81:80"
  ngnix_proxy:
    container_name: ngninx_proxy
    image: nginx
    restart: always
    ports:
      - "${DHIS2_CORE_PORT_HTTP}:80"
      - "${DHIS2_CORE_PORT_HTTPS}:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.apps:/data/apps:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
        - portainer_data:/data
        - /var/run/docker.sock:/var/run/docker.sock
    restart: always
volumes:
  portainer_data:    
  datadb:
  home:
